<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="User">

	<!-- Use type aliases to avoid typing the full classname every time. -->
	<typeAlias alias="User" type="pw.cdmi.box.uam.user.domain.User" />

	<select id="getUserByLoginNameAppId" parameterClass="map" resultClass="User">
    	<![CDATA[
        select * from user where loginName=#loginName# and appId=#appId#
        ]]>
	</select>

	<select id="getUserByObjectSidAppId" parameterClass="map"
		resultClass="User">
        <![CDATA[
        select * from user where objectSid=#objectSid# and appId=#appId#
        ]]>
	</select>
	<select id="getUsersAppId" parameterClass="map" resultClass="User">
        <![CDATA[
        select * from user where appId=#appId#
        ]]>
	</select>
	
	<select id="getUsersAppIdAndLimit" parameterClass="map" resultClass="User">
        <![CDATA[
        select * from user where appId=#appId# limit #offset#,#length#
        ]]>
	</select>

	<select id="getAll" resultClass="User">
        <![CDATA[
        select * from user
        ]]>
    </select>
    <select id="getFilterdOrderList" parameterClass="map" resultClass="User">
        select * from user where 1=1
        <dynamic prepend="and" open="(" close=")">
            <isNotEmpty prepend="or" property="filter.loginName">
                loginName like concat('%',#filter.loginName#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="filter.name">
                name like concat('%',#filter.name#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="filter.email">
                email like concat('%',#filter.email#,'%') 
            </isNotEmpty>         
        </dynamic>
        <isNotEqual prepend="and" property="filter.regionId" compareValue="0">
           	<![CDATA[
              regionId=#filter.regionId#  
              ]]>
		 </isNotEqual>
		<isNotNull prepend="and" property="filter.appId">
           	<![CDATA[
              appId=#filter.appId#  
              ]]>
         </isNotNull>
        <dynamic prepend="order by ">
            <isNotNull property="orderBy">
                $orderBy$  
            </isNotNull>
        </dynamic>
        <dynamic prepend="limit">
            <isNotNull property="limit">
                #limit.offset#,#limit.length#
            </isNotNull>
        </dynamic>
    </select>
    <select id="getFilterd" parameterClass="map" resultClass="User">
        select * from user where 1=1
        <dynamic prepend="and" open="(" close=")">
            <isNotEmpty prepend="or" property="filter.loginName">
                loginName like concat('%',#filter.loginName#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="filter.name">
                name like concat('%',#filter.name#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="filter.email">
                email like concat('%',#filter.email#,'%') 
            </isNotEmpty>         
        </dynamic>
        <isNotEqual prepend="and" property="filter.regionId" compareValue="0">
           	<![CDATA[
              regionId=#filter.regionId#  
              ]]>
         </isNotEqual>
         <isNotNull prepend="and" property="filter.status">
           	<![CDATA[
              status=#filter.status#  
              ]]>
         </isNotNull>
        <isNotNull prepend="and" property="filter.appId">
           	<![CDATA[
              appId=#filter.appId#  
              ]]>
         </isNotNull>
        <dynamic prepend="order by">
            <isNotNull property="order">
                <isNotEmpty property="order.field">
                    $order.field$
                    <isEqual property="order.desc" compareValue="true">
                        desc
                    </isEqual>
                </isNotEmpty>
            </isNotNull>
        </dynamic>
        <dynamic prepend="limit">
            <isNotNull property="limit">
                #limit.offset#,#limit.length#
            </isNotNull>
        </dynamic>
    </select>
    
    
    <select id="getFilterdId" parameterClass="User" resultClass="String">
        select id from user where 1=1
        <dynamic prepend="and" open="(" close=")">
            <isNotEmpty prepend="or" property="loginName">
                loginName like concat('%',#loginName#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="name">
                name like concat('%',#name#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="email">
                email like concat('%',#email#,'%') 
            </isNotEmpty>         
        </dynamic>
        <isNotEqual prepend="and" property="regionId" compareValue="0">
           	<![CDATA[
              regionId=#regionId#  
              ]]>
         </isNotEqual>
         <isNotNull prepend="and" property="status">
           	<![CDATA[
              status=#status#  
              ]]>
         </isNotNull>
        <isNotNull prepend="and" property="appId">
           	<![CDATA[
              appId=#appId#  
              ]]>
         </isNotNull>
    </select>
    
    
    
    <select id="getFilterdCount" parameterClass="map" resultClass="int">
        select count(id) from user where 1=1
        <dynamic prepend="and" open="(" close=")">
            <isNotEmpty prepend="or" property="filter.loginName">
                loginName like concat('%',#filter.loginName#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="filter.name">
                name like concat('%',#filter.name#,'%') 
            </isNotEmpty>
            <isNotEmpty prepend="or" property="filter.email">
                email like concat('%',#filter.email#,'%') 
            </isNotEmpty>
        </dynamic>
        
         <isNotEqual prepend="and" property="filter.regionId" compareValue="0">
           	<![CDATA[
              regionId=#filter.regionId#  
              ]]>
         </isNotEqual>
         <isNotNull prepend="and" property="filter.status">
           	<![CDATA[
              status=#filter.status#  
              ]]>
         </isNotNull>
        <isNotNull prepend="and" property="filter.appId">
           	<![CDATA[
              appId=#filter.appId#  
              ]]>
         </isNotNull>   
	</select>
    <select id="get" resultClass="User" parameterClass="long">
        <![CDATA[
        select * from user where id=#value#
        ]]>
	</select>
	<select id="getUserByCloudUserId" resultClass="User" parameterClass="Long">
        <![CDATA[
        select * from user where cloudUserId=#value#
        ]]>
	</select>
    <select id="getUserid" resultClass="long" >
        <![CDATA[
        select max(id)  from user 
        ]]>
	</select>

	<insert id="insert" parameterClass="User">
        <![CDATA[
        insert into user(id,objectSid,loginName,password,name,department,departmentCode,email,createdAt,modifiedAt,lastLoginAt,status
        ,domain,cloudUserId,principalType,resourceType,appId,regionId,teamSpaceFlag,teamSpaceMaxNum,spaceQuota,maxVersions,iterations,salt,uploadBandWidth,downloadBandWidth) 
        values 
        (#id#,#objectSid#,#loginName#,#password#,#name#,#department#,#departmentCode#
        ,#email#,#createdAt#,#modifiedAt#,#lastLoginAt#,#status#,#domain#,#cloudUserId#,#principalType#,#resourceType#,
        #appId#,#regionId#,#teamSpaceFlag#,#teamSpaceMaxNum#,#spaceQuota#,#maxVersions#,#iterations#,#salt#,#uploadBandWidth#,#downloadBandWidth#)
        ]]>
	</insert>
	
	<update id="update" parameterClass="User">
        <![CDATA[
        update user set objectSid=#objectSid#,name=#name#, password=#password#,iterations=#iterations#,salt=#salt#, loginName=#loginName#, 
        department=#department#,departmentCode=#departmentCode#, email=#email#, createdAt=#createdAt#, modifiedAt=#modifiedAt#,lastLoginAt=#lastLoginAt#,
        status=#status#,domain=#domain#,regionId=#regionId#,maxVersions=#maxVersions#,teamSpaceFlag=#teamSpaceFlag#,teamSpaceMaxNum=#teamSpaceMaxNum#,spaceQuota=#spaceQuota#,uploadBandWidth=#uploadBandWidth#,downloadBandWidth=#downloadBandWidth#
        where id=#id#
        ]]>
	</update>
	<update id="updateUsers" parameterClass="User">
        <![CDATA[
        update user set objectSid=#objectSid#,name=#name#, password=#password#,iterations=#iterations#,salt=#salt#, loginName=#loginName#, 
        department=#department#,departmentCode=#departmentCode#, email=#email#, createdAt=#createdAt#, modifiedAt=#modifiedAt#,lastLoginAt=#lastLoginAt#,
        status=#status#,domain=#domain#,regionId=#regionId#,maxVersions=#maxVersions#,teamSpaceFlag=#teamSpaceFlag#,teamSpaceMaxNum=#teamSpaceMaxNum#,uploadBandWidth=#uploadBandWidth#,downloadBandWidth=#downloadBandWidth#
        where id=#id#
        ]]>
	</update>


	<update id="updateStatus" parameterClass="User">
        <![CDATA[
        update user set status=#status#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>

	<update id="updateRegion" parameterClass="User">
        <![CDATA[
        update user set regionId=#regionId#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>
    
    <update id="updateValidateKey" parameterClass="User">
        <![CDATA[
        update user set validateKey=#validateKey#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
    </update>

	<update id="updatePassword" parameterClass="User">
        <![CDATA[
        update user set password=#password#, iterations=#iterations#,salt=#salt#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>

	<update id="updateTeamSpace" parameterClass="User">
        <![CDATA[
        update user set teamSpaceFlag=#teamSpaceFlag#, teamSpaceMaxNum=#teamSpaceMaxNum#, modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>


	<update id="sacle" parameterClass="User">
        <![CDATA[
        update user set modifiedAt=#modifiedAt# where id=#id#
        ]]>
	</update>

	<delete id="delete" parameterClass="long">
        <![CDATA[
        delete from user where id=#value#
        ]]>
	</delete>
	<select id="getMaxUserId" resultClass="Long">
        <![CDATA[
        select max(id) from user
        ]]>
    </select>
    
    <select id="getFilterdCountByLoginDate" parameterClass="map" resultClass="Long">
        select count(id) from user where 1=1
         <isNotNull prepend="and" property="beginDate">
           	<![CDATA[
              lastLoginAt>=#beginDate#  
              ]]>
         </isNotNull>
         <isNotNull prepend="and" property="endDate">
           	<![CDATA[
              lastLoginAt<#endDate#  
              ]]>
         </isNotNull>
        <isNotNull prepend="and" property="appId">
           	<![CDATA[
              appId=#appId#  
              ]]>
         </isNotNull>   
	</select>
    
</sqlMap>

